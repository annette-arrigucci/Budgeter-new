@model Budgeter.Models.BudgetItemViewModel
@using Budgeter.Models

@using (Html.BeginForm("Create", "BudgetItems", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Income/Expense</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BudgetId)
        <div class="form-group">
            <div class="row">
                <div class="col-md-6 col-md-offset-1">
                    @Html.RadioButtonFor(model => model.Type, "Expense", new { @checked = "checked", @id = "budget-radio-expense" })Expense
                    @Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
                    @Html.RadioButtonFor(model => model.Type, "Income", new { @id = "budget-radio-income" })Income
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

                @*<div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                        </div>
                        <div class="row">
                            <div class="col-md-8 col-md-offset-1">
                                @Html.DropDownListFor(model => model.SelectedCategory, Model.CategoryList, "-Select Category-", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                @*<div class="form-group">
                    <div class="row">
                        @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                        
                    </div>
                    <div class="row">
                        <div class="col-md-8 col-md-offset-1">
                            <input class="text-box single-line form-control" data-val="true" data-val-required="Category is required" id="categoryselect" name="CategoryName" type="text" value="" />
                            @Html.ActionLink("Edit Categories", "EditCategories", "Budgets", new { id = User.Identity.GetHouseholdId() }, null)
                        </div>               
                    </div>
                </div>*@

        <!---#expense-dropdown is displayed by default, can be hidden depending on value of radio button-->
        <div id="budget-expense-dropdown">
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                </div>
                <div class="row">
                    <div class="col-md-8 col-md-offset-1">
                        @Html.DropDownListFor(model => model.SelectedCategory, Model.ExpenseCategoryList, "-Select Category-", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
                        @Html.ActionLink("Edit Categories", "EditCategories", "Budgets", new { @id = User.Identity.GetHouseholdId() }, null)
                    </div>
                </div>
            </div>
        </div>
        
        <!---#income-dropdown is initally hidden in transaction-form-style stylesheet-->
        <div id="budget-income-dropdown">
            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                </div>
                <div class="row">
                    <div class="col-md-8 col-md-offset-1">
                        @Html.DropDownListFor(model => model.SelectedCategory, Model.IncomeCategoryList, "-Select Category-", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
                        @Html.ActionLink("Edit Categories", "EditCategories", "Budgets", new { @id = User.Identity.GetHouseholdId() }, null)
                    </div>
                </div>
            </div>
        </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                    </div>
                    <div class="row">
                        <div class="col-md-8 col-md-offset-1">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                    </div>
                    <div class="row">
                        <div class="col-md-4 col-md-offset-1">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.IsRepeating, htmlAttributes: new { @class = "control-label col-md-6 col-md-offset-1 form-label" })
            </div>
            <div class="row">
                <div class="col-md-4 col-md-offset-1">
                    @Html.CheckBoxFor(m => Model.IsRepeating)
                    @Html.HiddenFor(m => Model.IsRepeating)
                </div>
            </div>
        </div>


            <div class="form-actions no-color">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
            }
