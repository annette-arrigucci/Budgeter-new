@model Budgeter.Models.BudgetItemCreateViewModel
@using (Html.BeginForm("Create", "BudgetItem", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Income/Expense</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BudgetId)
        <div class="col-md-6">
            @Html.RadioButtonFor(model => model.Type, "Expense", new { @checked = "checked", @id ="radio-expense" })Expense
            @Html.Raw("<br>")
            @Html.RadioButtonFor(model => model.Type, "Income", new { @id = "radio-income" })Income
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger"})
        </div>

        @*<div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
            </div>
            <div class="row">
                <div class="col-md-8 col-md-offset-1">
                    @Html.DropDownListFor(model => model.SelectedCategory, Model.CategoryList, "-Select Category-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="row">
                @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-7" })
            </div>
            <div class="row">
                <div class="col-md-8 col-md-offset-1">
                    <input class="text-box single-line" data-val="true" data-val-required="Category is required" id="categoryselect" name="CategoryName" type="text" value="" />
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                </div>
                <div class="row">
                    <div class="col-md-8 col-md-offset-1">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                </div>
                <div class="row">
                    <div class="col-md-4 col-md-offset-1">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.IsRepeating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4 col-md-offset-1">
                    @Html.CheckBoxFor(m => Model.IsRepeating)
                    @Html.HiddenFor(m => Model.IsRepeating)
                </div>
            </div>


            <div class="form-actions no-color">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
