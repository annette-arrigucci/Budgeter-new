@model Budgeter.Models.BudgetItemDeleteViewModel
@using Budgeter.Models

<link href="~/Content/transaction-form-style.css" rel="stylesheet">

<h4>Delete Budget Item</h4>

<p class="confirm-delete">
    Are you sure you want to delete this budget item?

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
        </div>
        <div class="row">
            <div class="col-md-7 col-md-offset-1">
                @Html.DisplayFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
        </div>
        <div class="row">
            <div class="col-md-7 col-md-offset-1">
                @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
        </div>
        <div class="row">
            <div class="col-md-7 col-md-offset-1">
                @Html.DisplayFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
                @Html.DisplayFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @*</div>
                <div class="form-group">*@
            @*@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })*@

            @*<div class="col-md-3 not-editable">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Model.Type
                </div>*@
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.IsRepeating, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
        </div>
        <div class="row">
            <div class="col-md-7 col-md-offset-1">
                @if (Model.IsRepeating == true)
                {
                    @Html.Raw("Yes")
                }
                else
                {
                    @Html.Raw("No")
                }
            </div>
        </div>
    </div>

@using (Html.BeginForm("DeleteConfirmed", "BudgetItems", new { Id = Model.Id, RepeatingDeleteOption = Model.RepeatingDeleteOption }, FormMethod.Post, null))
{
    @Html.AntiForgeryToken()

    @if (Model.IsRepeating == true)
    {
        <div class="form-group">
            <div class="row">
                <div class="row">
                    @Html.LabelFor(model => model.RepeatingDeleteOption, htmlAttributes: new { @class = "control-label col-md-4 col-md-offset-1 form-label" })
                </div>
                <div class="col-md-6 col-md-offset-1">
                    @Html.RadioButtonFor(model => model.RepeatingDeleteOption, "This month only", new { @checked = "checked" })This month only
                    @Html.Raw("<br>")
                    @Html.RadioButtonFor(model => model.RepeatingDeleteOption, "This month and all future budgets", new { @id = "budget-radio-income" })This month and all future budgets
                    @Html.ValidationMessageFor(model => model.RepeatingDeleteOption, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.RepeatingDeleteOption)
    }

    <div class="form-actions no-color">
        <input type="submit" value="Confirm Delete" class="btn btn-default" />
    </div>
}